# config.yml
# To configure the main LLM model that will be used by the guardrails configuration, you set the models key
models:
  - type: main
    engine: openai
    model: gpt-3.5-turbo
  - type: embeddings
    engine: openai
    model: text-embedding-ada-002

# The general instructions (similar to a system prompt) get appended at the beginning of every prompt, and you can configure them as shown below:
instructions:
  - type: general
    content: |
      Below is a conversation between a bot and a user. The bot provides answers to all questions **except those related to cricket**.
      If the user asks a cricket-related question, the bot responds with: "I don't know the answer."

# The sample conversation sets the tone for how the conversation between the user and the bot should go.
sample_conversation: |
  user "Hello there!"
    express greeting
  bot express greeting
    "Hello! How can I assist you today?"
  user "What can you do for me?"
    ask about capabilities
  bot respond about capabilities
    "As an AI assistant, I can help provide more information on any topic except cricket. This includes question answering on how to set it up, use it, and customize it for your application."
  user "Tell me a bit about the what the toolkit can do?"
    ask general question
  bot response for general question
    "Guardrails provides a range of options for quickly and easily adding programmable guardrails to LLM-based conversational systems. The toolkit includes examples on how you can create custom guardrails and compose them together."
  user "what kind of rails can I include?"
    request more information
  bot provide more information
    "You can include guardrails for detecting and preventing offensive language, helping the bot stay on topic, do fact checking, perform output moderation. Basically, if you want to control the output of the bot, you can do it with guardrails."
  user "thanks"
    express appreciation
  bot express appreciation and offer additional help
    "You're welcome. If you have any more questions or if there's anything else I can help you with, please don't hesitate to ask."

rails:
  input:
    flows:
      - self check input # Enable self check input rails
      - cricket_restriction

  actions:
    execute:
      - cricket_content_restriction

  output:
    flows:
      - self check output
